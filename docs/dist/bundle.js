/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./docs/src/core/applications/calculator/index.js":
/*!********************************************************!*\
  !*** ./docs/src/core/applications/calculator/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Calculator; }\n/* harmony export */ });\n/* harmony import */ var _interface_Dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../interface/Dom */ \"./docs/src/interface/Dom.ts\");\n\r\n\r\nclass Calculator extends _interface_Dom__WEBPACK_IMPORTED_MODULE_0__.default {\r\n\r\n     static base = location.origin + \"/src/core/applications/calculator\";\r\n     static name = \"Calculator\";\r\n     static draggable_window = {\r\n          title: Calculator.name,\r\n          height: 400,\r\n          width: 300\r\n     };\r\n\r\n     input = new _interface_Dom__WEBPACK_IMPORTED_MODULE_0__.default(\"input\", { value: 0, className: \"input\" });\r\n     content = new _interface_Dom__WEBPACK_IMPORTED_MODULE_0__.default(\"div\", { className: \"content\" });\r\n     buttons = [];\r\n\r\n     constructor() {\r\n          super(\"div\", { id: Calculator._name });\r\n\r\n          this.input.style = {\r\n               margin: \"10px\",\r\n               width: \"-webkit-fill-available\",\r\n               border: \"none\",\r\n               height: \"45px\",\r\n               fontSize: \"30px\",\r\n               background: \"#ffffff2e\",\r\n               borderRadius: \"10px\",\r\n               paddingLeft: \"10px\",\r\n               color: \"white\"\r\n          };\r\n\r\n          this.content.style = {\r\n               // width: \"fit-content\", // no duplicates noob\r\n               margin: \"auto\",\r\n               marginTop: \"40px\",\r\n               width: \"67%\"\r\n          }\r\n     }\r\n\r\n     createInput(config) {\r\n          const input = new _interface_Dom__WEBPACK_IMPORTED_MODULE_0__.default(\"input\", { type: \"button\", value: config.value, name: config.name });\r\n\r\n          input.style = {\r\n               margin: \"5px\",\r\n               border: \"none\",\r\n               height: \"40px\",\r\n               width: \"40px\",\r\n               fontSize: \"25px\",\r\n               color: \"white\",\r\n               borderRadius: typeof config.value == \"number\" ? \"5px\" : \"50px\",\r\n               background: \"#0000004d\",\r\n               transition: \"all 0.1s\",\r\n               boxShadow: \"0px 2px 6px #00000052\"\r\n          };\r\n\r\n          input.event(\"mouseover\", () => {\r\n               input.style = {\r\n                    background: \"rgb(0 0 0 / 50%)\",\r\n                    boxShadow: \"rgb(0 0 0 / 65%) 0px 2px 6px\"\r\n               }\r\n          })\r\n\r\n          input.event(\"mouseleave\", () => {\r\n               input.style = {\r\n                    background: \"#0000004d\",\r\n                    boxShadow: \"0px 2px 6px #00000052\"\r\n               }\r\n          })\r\n\r\n          input.event(\"click\", () => {\r\n               if (config.then) this.input.value = config.then(this.input)\r\n               else this.input.value += config.value\r\n          });\r\n\r\n          return input;\r\n     }\r\n\r\n     create() {\r\n          this.content.add(\r\n               this.createInput({ name: \"one\", value: 1 }),\r\n               this.createInput({ name: \"one\", value: 2 }),\r\n               this.createInput({ name: \"one\", value: 3 }),\r\n               this.createInput({ name: \"plus\", value: \"+\" }),\r\n               new _interface_Dom__WEBPACK_IMPORTED_MODULE_0__.default(\"br\", {}),\r\n\r\n               this.createInput({ name: \"one\", value: 4 }),\r\n               this.createInput({ name: \"one\", value: 5 }),\r\n               this.createInput({ name: \"one\", value: 6 }),\r\n               this.createInput({ name: \"minus\", value: \"-\" }),\r\n               new _interface_Dom__WEBPACK_IMPORTED_MODULE_0__.default(\"br\", {}),\r\n\r\n               this.createInput({ name: \"one\", value: 7 }),\r\n               this.createInput({ name: \"one\", value: 8 }),\r\n               this.createInput({ name: \"one\", value: 9 }),\r\n               this.createInput({ name: \"times\", value: \"*\" }),\r\n               new _interface_Dom__WEBPACK_IMPORTED_MODULE_0__.default(\"br\", {}),\r\n\r\n               this.createInput({ name: \"clear\", value: \"C\", then: () => \"\" }),\r\n               this.createInput({ name: \"zero\", value: 0 }),\r\n               this.createInput({ name: \"doit\", value: \"=\", then: input => this.calculate(this.parseCalculationString(input.value)) }),\r\n               this.createInput({ name: \"div\", value: \"/\" }),\r\n               new _interface_Dom__WEBPACK_IMPORTED_MODULE_0__.default(\"br\", {})\r\n          );\r\n\r\n          this.add(\r\n               this.input,\r\n               this.content\r\n          )\r\n     };\r\n\r\n     parseCalculationString(s) {\r\n          // --- Parse a calculation string into an array of numbers and operators\r\n          let calculation = [];\r\n          let current = '';\r\n\r\n          for (var i = 0, ch; ch = s.charAt(i); i++) {\r\n\r\n               if ('^*/+-'.indexOf(ch) > -1) {\r\n\r\n                    if (current == '' && ch == '-') { current = '-' }\r\n                    else { calculation.push(parseFloat(current), ch); current = '' };\r\n\r\n               } else {\r\n                    current += s.charAt(i);\r\n               }\r\n\r\n          }\r\n\r\n          if (current != '') calculation.push(parseFloat(current));\r\n\r\n          return calculation;\r\n     };\r\n\r\n     calculate(c) {\r\n\r\n          // --- Perform a calculation expressed as an array of operators and numbers\r\n          const ops = [\r\n               { '^': (a, b) => Math.pow(a, b) },\r\n               { '*': (a, b) => a * b, '/': (a, b) => a / b },\r\n               { '+': (a, b) => a + b, '-': (a, b) => a - b }\r\n          ]\r\n\r\n          let nc = [];\r\n\r\n          let co;\r\n\r\n          for (var i = 0; i < ops.length; i++) {\r\n\r\n               for (var j = 0; j < c.length; j++) {\r\n\r\n                    if (ops[i][c[j]]) { co = ops[i][c[j]]; }\r\n\r\n                    else if (co) { nc[nc.length - 1] = co(nc[nc.length - 1], c[j]); co = null; }\r\n                    else { nc.push(c[j]); }\r\n\r\n               }\r\n\r\n               c = nc;\r\n               nc = [];\r\n          }\r\n\r\n\r\n          if (c.length > 1) return c || 'Error.';\r\n          else return c[0] || 'Error.';\r\n\r\n     }\r\n}\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/core/applications/calculator/index.js?");

/***/ }),

/***/ "./docs/src/core/applications/file-system/index.js":
/*!*********************************************************!*\
  !*** ./docs/src/core/applications/file-system/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FileManager; }\n/* harmony export */ });\n/* harmony import */ var _interface_core_Folder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../interface/core/Folder */ \"./docs/src/interface/core/Folder.ts\");\n/* harmony import */ var _interface_Dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../interface/Dom */ \"./docs/src/interface/Dom.ts\");\n/* harmony import */ var _interface_core_ContextMenu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../interface/core/ContextMenu */ \"./docs/src/interface/core/ContextMenu.ts\");\n\r\n\r\n\r\n\r\nclass FileManager extends _interface_Dom__WEBPACK_IMPORTED_MODULE_1__.default {\r\n\r\n     static base = location.origin + \"/src/core/applications/file-system\";\r\n     static name = \"File Manager\";\r\n     static draggable_window = {\r\n          title: FileManager.name,\r\n          height: 400,\r\n          width: 600\r\n     };\r\n\r\n     navbar = new _interface_Dom__WEBPACK_IMPORTED_MODULE_1__.default(\"div\", { className: \"navbar\" });\r\n\r\n     tree = new _interface_Dom__WEBPACK_IMPORTED_MODULE_1__.default(\"div\", { className: \"tree\" });\r\n     content = new _interface_Dom__WEBPACK_IMPORTED_MODULE_1__.default(\"div\", { className: \"content\" });\r\n\r\n     constructor() {\r\n          super(\"div\", { id: \"FileManager\" });\r\n\r\n          this.tree.style = `font-family: arial;\r\n          padding: 10px;\r\n          height: -webkit-fill-available;\r\n          background: rgba(255, 255, 255, 0.1);\r\n          border-radius: 10px;\r\n          margin: 10px;\r\n          width: 138px;\r\n          box-shadow: 0px 4px 6px #00000021;`;\r\n\r\n          this.style = `height: -webkit-fill-available;display: flex;`;\r\n\r\n          this.scaleContent(80);\r\n     }\r\n\r\n     scaleContent(size) {\r\n          this.content.style = {\r\n               transform: `scale(${size / 100}) translate(-${size / 2}px, -${size / 2}px)`\r\n          }\r\n     }\r\n\r\n     createFolderTree(parent, folder, open, op = true, child) {\r\n\r\n\r\n          const body = new _interface_Dom__WEBPACK_IMPORTED_MODULE_1__.default(\"div\", { className: \"folder\" });\r\n          const children = new _interface_Dom__WEBPACK_IMPORTED_MODULE_1__.default(\"div\", { className: \"children\" });\r\n\r\n          const icon = new _interface_Dom__WEBPACK_IMPORTED_MODULE_1__.default(\"span\", { className: \"material-icons\", innerText: \"folder\" });\r\n          const name = new _interface_Dom__WEBPACK_IMPORTED_MODULE_1__.default(\"span\", { innerText: folder.meta.name });\r\n\r\n          // @ts-ignore\r\n          icon.style = `color:#ffe69a;`;\r\n\r\n          // @ts-ignore\r\n          children.style = `width: fit-content;\r\n          margin-left: 25px;`;\r\n\r\n          // @ts-ignore\r\n          name.style = `top: -7px;\r\n          padding-left: 7px;\r\n          position: relative;\r\n          font-size: 11px;\r\n          color: white;\r\n          cursor:pointer;`;\r\n\r\n          // @ts-ignore\r\n          body.style = `user-select: none;`;\r\n\r\n          children.hide();\r\n\r\n          folder.children.forEach(item => {\r\n               if (item instanceof _interface_core_Folder__WEBPACK_IMPORTED_MODULE_0__.default) {\r\n                    if (item == item.folder) return;\r\n\r\n                    this.createFolderTree(children, item, item == child)\r\n               }\r\n          });\r\n\r\n          name.event(\"dblclick\", () => {\r\n               children.show();\r\n               this.createFolderContent(folder);\r\n          });\r\n\r\n          if (child && child.parent == folder) open = true;\r\n\r\n          if (open) children.show();\r\n\r\n          this.createFolderContent(child || folder);\r\n\r\n          if (op == true) {\r\n               parent.add(\r\n                    body.add(\r\n                         icon,\r\n                         name,\r\n                         children\r\n                    )\r\n               );\r\n          }\r\n     };\r\n\r\n     createClone(item) {\r\n          const clone = item.createClone()\r\n          const name = clone.get(\".name\");\r\n          const icon = clone.get(\".icon\");\r\n\r\n          item.createEvents({\r\n               name: name,\r\n               icon: icon,\r\n               open: () => {\r\n                    if (item instanceof _interface_core_Folder__WEBPACK_IMPORTED_MODULE_0__.default) this.openFolder(item, false, null);\r\n                    else item.open()\r\n               },\r\n               update() {\r\n                    const newClone = this.createClone(item)\r\n                    clone.element.replaceWith(newClone.element)\r\n               }\r\n          });\r\n\r\n          return clone;\r\n     }\r\n\r\n     createFolderContent(folder) {\r\n          this.content.clear();\r\n\r\n          this.content.add(\r\n               ...folder.children.map(item => {\r\n\r\n                    return this.createClone(item);\r\n               })\r\n          )\r\n     }\r\n\r\n\r\n     openFolder(folder, op, child) {\r\n          this.createFolderTree(this.tree, folder, true, op, child);\r\n     }\r\n\r\n     createContext() {\r\n          const contextMenu = new _interface_core_ContextMenu__WEBPACK_IMPORTED_MODULE_2__.default(this.element, []);\r\n\r\n          contextMenu.emitter.addEventListener(\"open\", e => {\r\n               const items = [];\r\n\r\n               const element = e.path.filter(e => e.id == \"Item\").pop();\r\n\r\n               if (element && element.item.context) {\r\n                    items.push(...element.item.context);\r\n\r\n                    contextMenu.ignore = false\r\n               } else {\r\n                    contextMenu.ignore = true;\r\n               }\r\n\r\n               contextMenu.createItems(items);\r\n          })\r\n\r\n          contextMenu.install();\r\n     }\r\n\r\n\r\n     create(root, folder) {\r\n          this.openFolder(root.desktop.folder, true, folder);\r\n\r\n          this.add(this.tree, this.content);\r\n\r\n          this.createContext()\r\n\r\n          this.content.style = {\r\n               width: `${this.element.offsetWidth - this.tree.element.offsetWidth}px`\r\n          }\r\n     }\r\n\r\n}\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/core/applications/file-system/index.js?");

/***/ }),

/***/ "./docs/src/core/applications/netflix/index.js":
/*!*****************************************************!*\
  !*** ./docs/src/core/applications/netflix/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Netflix; }\n/* harmony export */ });\n/* harmony import */ var _interface_Dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../interface/Dom */ \"./docs/src/interface/Dom.ts\");\n\r\n\r\nclass Netflix extends _interface_Dom__WEBPACK_IMPORTED_MODULE_0__.default {\r\n\r\n     static base = location.origin + \"/src/core/applications/netflix\";\r\n     static _name = \"Netflix\";\r\n     static draggable_window = {\r\n          title: Netflix._name,\r\n          height: 400,\r\n          width: 600\r\n     };\r\n\r\n     iframe = new _interface_Dom__WEBPACK_IMPORTED_MODULE_0__.default(\"iframe\", { className: \"netflix\" })\r\n\r\n     constructor() {\r\n          super(\"div\", { id: \"Netflix\" });\r\n     }\r\n\r\n     create() {\r\n          this.iframe.src = \"https://www.netflix.com\";\r\n\r\n          this.iframe.style = {\r\n               width: \"-webkit-fill-available\",\r\n               height: \"-webkit-fill-available\",\r\n               border: \"none\"\r\n          }\r\n\r\n          this.add(this.iframe);\r\n     }\r\n\r\n\r\n}\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/core/applications/netflix/index.js?");

/***/ }),

/***/ "./docs/src/EventEmitter.ts":
/*!**********************************!*\
  !*** ./docs/src/EventEmitter.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nclass EventEmitter {\r\n    /** @type {Map<string, Array<function>>} */\r\n    #events = new Map();\r\n    /**\r\n     *\r\n     * @param {string} name emitter name\r\n     * @param {function} listener emitter callback\r\n     */\r\n    addEventListener(name, listener) {\r\n        if (!this.#events.has(name))\r\n            this.#events.set(name, []);\r\n        const event = this.#events.get(name);\r\n        event.push(listener);\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} name emitter name\r\n     * @param {function} listenerToRemove emitter callback function to be removed\r\n     * @returns {void}\r\n     */\r\n    removeListener(name, listenerToRemove) {\r\n        if (!this.#events.has(name))\r\n            return;\r\n        const event = this.#events.get(name);\r\n        this.#events.set(name, event.filter(listener => listener !== listenerToRemove));\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} name emitter name\r\n     * @param {any} data data to be parsed the callbacks\r\n     * @returns\r\n     */\r\n    emit(name, data) {\r\n        if (!this.#events.has(name))\r\n            return;\r\n        const event = this.#events.get(name);\r\n        event.forEach(callback => callback(data));\r\n    }\r\n}\r\nexports.default = EventEmitter;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/EventEmitter.ts?");

/***/ }),

/***/ "./docs/src/core/applications/default.ts":
/*!***********************************************!*\
  !*** ./docs/src/core/applications/default.ts ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.applications = void 0;\r\nconst Application_1 = __webpack_require__(/*! ../../interface/core/Application */ \"./docs/src/interface/core/Application.ts\");\r\nconst index_1 = __webpack_require__(/*! ./calculator/index */ \"./docs/src/core/applications/calculator/index.js\");\r\nconst index_2 = __webpack_require__(/*! ./file-system/index */ \"./docs/src/core/applications/file-system/index.js\");\r\nconst index_3 = __webpack_require__(/*! ./netflix/index */ \"./docs/src/core/applications/netflix/index.js\");\r\n/**\r\n * Default external applications.\r\n */\r\nexports.applications = [\r\n    new Application_1.default(index_1.default),\r\n    new Application_1.default(index_2.default),\r\n    new Application_1.default(index_3.default)\r\n];\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/core/applications/default.ts?");

/***/ }),

/***/ "./docs/src/core/items/default.ts":
/*!****************************************!*\
  !*** ./docs/src/core/items/default.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.folders = void 0;\r\nconst Folder_1 = __webpack_require__(/*! ../../interface/core/Folder */ \"./docs/src/interface/core/Folder.ts\");\r\nconst File_1 = __webpack_require__(/*! ../../interface/core/File */ \"./docs/src/interface/core/File.ts\");\r\nexports.folders = [\r\n    new Folder_1.default({\r\n        name: \"Testing\",\r\n        children: [\r\n            new File_1.default({ name: \"Test.txt\", data: \"Hello World\", dataType: \"utf8\" })\r\n        ]\r\n    })\r\n];\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/core/items/default.ts?");

/***/ }),

/***/ "./docs/src/global.ts":
/*!****************************!*\
  !*** ./docs/src/global.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GLOBAL = exports.preload = exports.stylesheet = exports.javascript = exports.update = exports.DATA = exports.load = exports.loaded = void 0;\r\n/**\r\n * @type {Number}\r\n */\r\nexports.loaded = 0;\r\n/**\r\n * @type {Number}\r\n */\r\nexports.load = 0;\r\n/**\r\n * @type {Map<string, ArrayBuffer>}\r\n */\r\nexports.DATA = new Map();\r\nfunction update(event, path) { }\r\nexports.update = update;\r\n/**\r\n * Loads javascropt code\r\n *\r\n * @function\r\n * @author Hoodgail Benjamin\r\n * @param {string} url javascript code url\r\n */\r\nfunction javascript(url) {\r\n    exports.load += 1;\r\n    return new Promise((resolve, reject) => {\r\n        const script = document.createElement('script');\r\n        document.body.appendChild(script);\r\n        script.onload = e => (resolve(e), update(e, url));\r\n        script.onerror = reject;\r\n        script.async = true;\r\n        script.src = url;\r\n    });\r\n}\r\nexports.javascript = javascript;\r\n;\r\n/**\r\n * Loads css stylesheet\r\n *\r\n * @function\r\n * @author Hoodgail Benjamin\r\n * @param {string} url stylesheet css url\r\n * @returns {Promise<Event>}\r\n */\r\nfunction stylesheet(url) {\r\n    exports.load += 1;\r\n    return new Promise((resolve, reject) => {\r\n        const link = document.createElement('link');\r\n        document.head.appendChild(link);\r\n        link.onload = e => (resolve(e), update(e, url));\r\n        link.onerror = reject;\r\n        link.rel = \"stylesheet\";\r\n        link.href = url;\r\n    });\r\n}\r\nexports.stylesheet = stylesheet;\r\n;\r\n/**\r\n * Preload files\r\n *\r\n * @function\r\n * @author Hoodgail Benjamin\r\n * @param {string} path file url path\r\n * @return {Promise<Event>}\r\n */\r\nfunction preload(path) {\r\n    exports.load += 1;\r\n    let now = Date.now();\r\n    return new Promise(async (resolve, reject) => {\r\n        let event = {};\r\n        try {\r\n            let data = await fetch(path);\r\n            let buffer = await data.arrayBuffer();\r\n            exports.DATA.set(path, buffer);\r\n            event.timeStamp = Date.now() - now;\r\n        }\r\n        catch (e) {\r\n            event.error = e;\r\n        }\r\n        ;\r\n        update(event, path);\r\n        resolve(event);\r\n    });\r\n}\r\nexports.preload = preload;\r\n// @ts-ignore\r\nNumber.prototype.round = function (decimals) {\r\n    if (typeof decimals === 'undefined')\r\n        decimals = 0;\r\n    return Math.round(this * Math.pow(10, decimals)) / Math.pow(10, decimals);\r\n};\r\n// @ts-ignore\r\nArray.prototype.random = function () {\r\n    return this[Math.floor(Math.random() * this.length)];\r\n};\r\n// @ts-ignore\r\nArray.prototype.getIndex = function (value) {\r\n    for (let index in this) {\r\n        if (value == this[index])\r\n            return index;\r\n    }\r\n    return null;\r\n};\r\n// @ts-ignore\r\nNumber.prototype.now = function () {\r\n    return Date.now() - this;\r\n};\r\n// @ts-ignore\r\nMath.toRadians = function (degrees) {\r\n    return degrees * (Math.PI / 180);\r\n};\r\n// @ts-ignore\r\nNumber.prototype.timeSince = function () {\r\n    let date = new Date(this);\r\n    let seconds = Math.floor((Date.now() - date.getTime()) / 1000);\r\n    let interval = seconds / 31536000;\r\n    if (interval > 1)\r\n        return Math.floor(interval) + \" years\";\r\n    interval = seconds / 2592000;\r\n    if (interval > 1)\r\n        return Math.floor(interval) + \" months\";\r\n    interval = seconds / 86400;\r\n    if (interval > 1)\r\n        return Math.floor(interval) + \" days\";\r\n    interval = seconds / 3600;\r\n    if (interval > 1)\r\n        return Math.floor(interval) + \" hours\";\r\n    interval = seconds / 60;\r\n    if (interval > 1)\r\n        return Math.floor(interval) + \" minutes\";\r\n    return Math.floor(seconds) + \" seconds\";\r\n};\r\nexports.GLOBAL = {};\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/global.ts?");

/***/ }),

/***/ "./docs/src/index.ts":
/*!***************************!*\
  !*** ./docs/src/index.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst global_1 = __webpack_require__(/*! ./global */ \"./docs/src/global.ts\");\r\nconst Root_1 = __webpack_require__(/*! ./interface/Root */ \"./docs/src/interface/Root.ts\");\r\nglobal_1.stylesheet(\"/stylesheet/Taskbar.css\");\r\nglobal_1.stylesheet(\"/stylesheet/Root.css\");\r\nglobal_1.stylesheet(\"/stylesheet/Desktop.css\");\r\nglobal_1.stylesheet(\"/stylesheet/Item.css\");\r\nglobal_1.stylesheet(\"/stylesheet/ContextMenu.css\");\r\nglobal_1.stylesheet(\"/stylesheet/material-icons/material-icons.css\");\r\nglobal_1.stylesheet(\"/stylesheet/DraggableWindow.css\");\r\nconst root = new Root_1.default();\r\nroot.create();\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/index.ts?");

/***/ }),

/***/ "./docs/src/interface/Desktop.ts":
/*!***************************************!*\
  !*** ./docs/src/interface/Desktop.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Dom_1 = __webpack_require__(/*! ./Dom */ \"./docs/src/interface/Dom.ts\");\r\nconst default_1 = __webpack_require__(/*! ../core/applications/default */ \"./docs/src/core/applications/default.ts\");\r\nconst default_2 = __webpack_require__(/*! ../core/items/default */ \"./docs/src/core/items/default.ts\");\r\nconst Folder_1 = __webpack_require__(/*! ./core/Folder */ \"./docs/src/interface/core/Folder.ts\");\r\nconst ContextMenu_1 = __webpack_require__(/*! ./core/ContextMenu */ \"./docs/src/interface/core/ContextMenu.ts\");\r\n/**\r\n * Taskbar dom interface\r\n */\r\nclass Desktop extends Dom_1.default {\r\n    folder = new Folder_1.default({\r\n        name: \"Desktop\"\r\n    });\r\n    contextMenu = new ContextMenu_1.default(this.element, []);\r\n    /**\r\n     * Constructs the dom\r\n     */\r\n    constructor() {\r\n        super(\"div\", { id: \"Desktop\" });\r\n        this.update();\r\n        const contextMenu = new ContextMenu_1.default(this.element, []);\r\n        contextMenu.emitter.addEventListener(\"open\", e => {\r\n            const items = [];\r\n            const element = e.path.filter(e => e.id == \"Item\").pop();\r\n            if (element && element.item.context) {\r\n                items.push(...element.item.context);\r\n                contextMenu.ignore = false;\r\n            }\r\n            else {\r\n                contextMenu.ignore = true;\r\n            }\r\n            contextMenu.createItems(items);\r\n        });\r\n        contextMenu.install();\r\n    }\r\n    update() {\r\n        this.clear();\r\n        [...default_1.applications, ...default_2.folders].forEach(item => {\r\n            this.folder.children.add(item);\r\n            this.add(item);\r\n        });\r\n    }\r\n}\r\nexports.default = Desktop;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/Desktop.ts?");

/***/ }),

/***/ "./docs/src/interface/Dom.ts":
/*!***********************************!*\
  !*** ./docs/src/interface/Dom.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n/**\r\n * A class for manipulating dom elements easier.\r\n *\r\n * @author hoodgail benjamin\r\n */\r\nclass Dom {\r\n    element;\r\n    cloneId;\r\n    /**\r\n    * Creating a dom constructor from an html element\r\n    * Represents a DOM element.\r\n    *\r\n    * @constructor\r\n    *\r\n    * @param {string|Element} query - The object element tag name or and element\r\n    * @param {Object} config - The config to be assigned\r\n    */\r\n    constructor(query = \"div\", config) {\r\n        this.element = typeof query == \"string\"\r\n            ? document.createElement(query)\r\n            : query;\r\n        this.setProperties(config || {});\r\n    }\r\n    attribute(property, value) { this.element.setAttribute(property, value); }\r\n    /**\r\n    * Assign properties to the element\r\n    *\r\n    * @param {Object} config - The object with properties to be assgined\r\n    */\r\n    setProperties(config) {\r\n        Object.keys(config)\r\n            .forEach(name => this.property(name, config[name]));\r\n    }\r\n    /**\r\n    * The property to be assigned to the element\r\n    *\r\n    * @param {string}   name - Property's name\r\n    * @param {*} value - Property's value from name\r\n   */\r\n    property(name, value) {\r\n        switch (name) {\r\n            case \"append\":\r\n            case \"add\":\r\n                this.add(...value);\r\n                break;\r\n            case \"eval\":\r\n                value.apply(this);\r\n                break;\r\n            case \"style\":\r\n                this.style = value;\r\n                break;\r\n            default: this.element[name] = value;\r\n        }\r\n    }\r\n    /**\r\n     * @param {Boolean} deep - the element and its whole subtree—including text that may be in child Text nodes—is also copied.\r\n     * @param {object} config - element config to be assigned\r\n     *\r\n     * @return {Dom}\r\n    */\r\n    clone(deep = false, config = {}) {\r\n        return new Dom(this.element.cloneNode(deep), config);\r\n    }\r\n    /**\r\n     * Hides the element\r\n     * sets the style display to none\r\n    */\r\n    hide() { this.display = \"none\"; }\r\n    /**\r\n     * Shows the element\r\n     * sets the style display to block\r\n    */\r\n    show() { this.display = \"block\"; }\r\n    /**\r\n     * Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.\r\n     \r\n     * Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\r\n     *\r\n     * @param {Array<Dom>} doms - Adding more Doms to the main dom as children\r\n     *\r\n     * @return {Dom}\r\n    */\r\n    add(...doms) {\r\n        this.element.append(...doms.map(r => r.element));\r\n        return this;\r\n    }\r\n    /**\r\n     * Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.\r\n    \r\n     * Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\r\n     *\r\n     * @param {Array<Dom>} doms - Adding more Doms to the main dom as children\r\n     *\r\n     * @return {Dom}\r\n    */\r\n    pre(...doms) {\r\n        this.element.prepend(...doms.map(r => r.element));\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the dom html as string\r\n     * if there's no parent it will return its innerHTML\r\n     *\r\n     * @return {String}\r\n    */\r\n    toString() { return this.element.parent ? this.element.parent.innerHTML : this.element.outterHTML; }\r\n    /**\r\n     * Trims the html text's string\r\n    */\r\n    trim() { this.html = this.text.trim(); }\r\n    /**\r\n     * Clears the dom element\r\n    */\r\n    clear() { this.element.innerHTML = \"\"; }\r\n    /**\r\n     * Getting a dom children\r\n     *\r\n     * @param {string}   query - search query selector string\r\n     * @param {object} config - element config to be assigned\r\n     * @param {Boolean} deep - If multiple elements is to be selected\r\n     *\r\n     * @return {Dom|Array<Dom>}\r\n    */\r\n    get(query = \"div\", config = {}, deep = false) {\r\n        if (deep) {\r\n            const elements = this.element.querySelectorAll(query);\r\n            return [...elements].map(element => new Dom(element, config));\r\n        }\r\n        else {\r\n            const element = this.element.querySelector(query);\r\n            return new Dom(element, config);\r\n        }\r\n    }\r\n    /**\r\n     * Adding an event listener\r\n     * @param {string}   name - event name\r\n     * @param {function} callback - event callback function to be called on dispatch\r\n    */\r\n    event(name, callback) { return this.element.addEventListener(name, callback); }\r\n    /**\r\n     * Removes the element from its parent\r\n     * if possible\r\n    */\r\n    delete() { this.remove(); }\r\n    /**\r\n     * Removes the element from its parent\r\n     * if it has a parent\r\n    */\r\n    remove() { this.element.remove(); }\r\n    /**\r\n     * Getting a dom children\r\n     * @param query - search query selector string\r\n     * @param config - element config to be assigned\r\n     * @param deep - If multiple elements is to be selected\r\n     * @param body - parent of element to be selected from\r\n     *\r\n     * @return {Dom|Array<Dom>}\r\n    */\r\n    static Get(query = \"div\", config = {}, deep = false, body = document) {\r\n        if (deep) {\r\n            const elements = body.querySelectorAll(query);\r\n            return [...elements].map((element) => new Dom(element, config));\r\n        }\r\n        else {\r\n            const element = body.querySelector(query);\r\n            return new Dom(element, config);\r\n        }\r\n    }\r\n    /**\r\n     * Setting value to element\r\n     * if input or select\r\n     *\r\n     * @param {string|Number} value - element value\r\n    */\r\n    set value(value) { this.element.value = value; }\r\n    /**\r\n     * Getting value from element\r\n     * if input or select\r\n    */\r\n    get value() { return this.element.value; }\r\n    /**\r\n     * Setting the source url to element\r\n     *\r\n     * @param {string}   src - The element's source\r\n    */\r\n    set src(src) { this.element.src = src; }\r\n    /**\r\n     * Changing the dom's style display\r\n     *\r\n     * @param {string}   display - The element's chosen display\r\n    */\r\n    set display(display) {\r\n        if (!display)\r\n            display = \"block\";\r\n        this.style = { display };\r\n    }\r\n    /**\r\n     * Changing the dom's style background\r\n     *\r\n     * @param {string}   background - element's background style\r\n    */\r\n    set background(background) { this.style = { background }; }\r\n    /**\r\n     * Adding a click event to the dom\r\n     *\r\n     * @param {Function} fn - function to be called on click\r\n    */\r\n    set click(fn) { this.element.addEventListener(\"click\", fn); }\r\n    /**\r\n     * Getting the dom element's text\r\n    */\r\n    get text() { return this.element.innerText; }\r\n    /**\r\n     * Seting the text of the dom\r\n     * Adding a dom to the element\r\n     *\r\n     * @param {Dom|String|Number} data - Text to be set or dom to be added\r\n    */\r\n    set text(data) {\r\n        if (data instanceof Dom) {\r\n            this.add(data);\r\n        }\r\n        else if (typeof data == \"string\") {\r\n            this.element.innerText = data;\r\n        }\r\n        else if (typeof data == \"number\") {\r\n            this.element.innerText = data.toString();\r\n        }\r\n    }\r\n    /**\r\n     * Getting dom html\r\n    */\r\n    get html() { return this.element.innerHTML; }\r\n    /**\r\n     * Seting the html of the dom\r\n     * Adding a dom to the element\r\n     *\r\n     * @param {Dom|String} data - Text to be set or dom to be added\r\n    */\r\n    set html(data) {\r\n        if (data instanceof Dom) {\r\n            this.add(data);\r\n        }\r\n        else if (typeof data == \"string\") {\r\n            this.element.innerHTML = data;\r\n        }\r\n        else if (typeof data == \"number\") {\r\n            this.element.innerHTML = data.toString();\r\n        }\r\n    }\r\n    /**\r\n     * Gets the element's position from the parent\r\n     */\r\n    get position() {\r\n        let el = this.element;\r\n        // yay readability\r\n        for (var lx = 0, ly = 0; el != null; lx += el.offsetLeft, ly += el.offsetTop, el = el.offsetParent)\r\n            ;\r\n        return { x: lx, y: ly };\r\n    }\r\n    /**\r\n     * Returns the element's style as object\r\n     * does not return styles set by css\r\n    */\r\n    get style() {\r\n        return Object.fromEntries(Object.entries(this.element.style).filter(r => r[1]));\r\n    }\r\n    /**\r\n     * Setting style to the dom as object or string\r\n     *\r\n     * @param {Object|String} style - The style data\r\n     *\r\n     * @example\r\n     * const dom = new Dom(\"div\", {});\r\n     * dom.style = { background: \"black\" };\r\n     * dom.style = \"background: black\";\r\n    */\r\n    set style(style) {\r\n        if (typeof style == \"string\") {\r\n            this.element.style = style;\r\n            return;\r\n        }\r\n        Object.keys(style).forEach(name => {\r\n            this.element.style[name] = style[name];\r\n        });\r\n    }\r\n}\r\nexports.default = Dom;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/Dom.ts?");

/***/ }),

/***/ "./docs/src/interface/Root.ts":
/*!************************************!*\
  !*** ./docs/src/interface/Root.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Dom_1 = __webpack_require__(/*! ./Dom */ \"./docs/src/interface/Dom.ts\");\r\nconst default_1 = __webpack_require__(/*! ../core/applications/default */ \"./docs/src/core/applications/default.ts\");\r\nconst default_2 = __webpack_require__(/*! ../core/items/default */ \"./docs/src/core/items/default.ts\");\r\nconst Taskbar_1 = __webpack_require__(/*! ./Taskbar */ \"./docs/src/interface/Taskbar.ts\");\r\nconst Desktop_1 = __webpack_require__(/*! ./Desktop */ \"./docs/src/interface/Desktop.ts\");\r\nconst Viewport_1 = __webpack_require__(/*! ./Viewport */ \"./docs/src/interface/Viewport.ts\");\r\n/**\r\n * Root dom interface\r\n */\r\nclass Root extends Dom_1.default {\r\n    /**\r\n     * @type {Dom<document.body>}\r\n     */\r\n    body = new Dom_1.default(document.body);\r\n    /**\r\n     * Root taskbar\r\n     *\r\n     * @type {Taskbar}\r\n     */\r\n    taskbar = new Taskbar_1.default();\r\n    /**\r\n     * Root toolbar\r\n     * will be displayed after the task bar\r\n     *\r\n     * time, notifs etc\r\n     *\r\n     * @type {Toolbar}\r\n     */\r\n    toolbar = null;\r\n    /**\r\n     * Root Viewport\r\n     * Where the desktop will be located\r\n     *\r\n     * Where applications will be rendererd\r\n     *\r\n     * @type {Taskbar}\r\n     */\r\n    viewport = new Viewport_1.default();\r\n    /**\r\n     * Root desktop\r\n     */\r\n    desktop = new Desktop_1.default();\r\n    /**\r\n     * Constructs the dom\r\n     */\r\n    constructor() {\r\n        super(\"div\", { id: \"Root\" });\r\n        this.desktop.folder.root = this;\r\n        [...default_1.applications, ...default_2.folders].forEach(app => { app.root = this; });\r\n    }\r\n    ;\r\n    getApplication(name) {\r\n        return default_1.applications\r\n            .filter(e => e.meta.name == name)\r\n            .pop();\r\n    }\r\n    /**\r\n     * Adds the root to the website's body.\r\n     */\r\n    create() {\r\n        this.body.add(this);\r\n        this.viewport.style = { height: \"88%\" };\r\n        this.taskbar.style = { height: \"15%\" };\r\n        this.add(this.viewport, this.taskbar);\r\n        this.viewport.add(this.desktop);\r\n        this.taskbar.insert(this.getApplication(\"File Manager\"));\r\n    }\r\n}\r\nexports.default = Root;\r\n;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/Root.ts?");

/***/ }),

/***/ "./docs/src/interface/Taskbar.ts":
/*!***************************************!*\
  !*** ./docs/src/interface/Taskbar.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Dom_1 = __webpack_require__(/*! ./Dom */ \"./docs/src/interface/Dom.ts\");\r\n/**\r\n * Taskbar dom interface\r\n */\r\nclass Taskbar extends Dom_1.default {\r\n    items = new Dom_1.default(\"div\", { className: \"items\" });\r\n    map = new Map();\r\n    /**\r\n     * Constructs the dom\r\n     */\r\n    constructor() {\r\n        super(\"div\", { id: \"Taskbar\" });\r\n        this.add(this.items);\r\n    }\r\n    includes(item) {\r\n        return this.map.has(item);\r\n    }\r\n    outsert(item) {\r\n        if (!this.map.has(item))\r\n            return;\r\n        const { body, config } = this.map.get(item);\r\n        if (config && config.active) {\r\n            body.attribute(\"active\", \"false\");\r\n            body.style = { opacity: 0 };\r\n            setTimeout(() => body.remove(), 100);\r\n        }\r\n        else {\r\n            body.remove();\r\n        }\r\n        this.map.delete(item);\r\n    }\r\n    applyConfig(config, body) {\r\n        body.attribute(\"active\", config.active == false ? \"false\" : \"true\");\r\n    }\r\n    updateConfig(item, config) {\r\n        if (!this.map.has(item))\r\n            return;\r\n        const map = this.map.get(item);\r\n        this.applyConfig(config, map.body);\r\n        map.config = config;\r\n    }\r\n    /**\r\n     * Adds an application to the taskbar\r\n     */\r\n    insert(item, config) {\r\n        if (this.map.has(item))\r\n            return;\r\n        const body = new Dom_1.default(\"div\", { className: \"item\" });\r\n        const screenshot = new Dom_1.default(\"div\", { className: \"screenshot\" });\r\n        body.style = { opacity: 0 };\r\n        const icon = item.createIcon(item.meta.icon, item.meta.iconType);\r\n        setTimeout(() => this.applyConfig(config, body), 100);\r\n        body.event(\"dblclick\", function () {\r\n            item.open();\r\n        });\r\n        body.event(\"mouseover\", async () => {\r\n            const screenshots = await Promise\r\n                .all([...item.windows].map(([e, a]) => a.screenshot()));\r\n            screenshot.clear();\r\n            screenshot.add(...screenshots);\r\n            const rect = body.element.getBoundingClientRect();\r\n            let length = screenshots.length;\r\n            screenshot.style = {\r\n                top: `${rect.top - 150}px`,\r\n                right: `${rect.right + 520}px`,\r\n                transform: `translateX(${length + (length % 2 == 0 ? 1 : 0)}0%)`,\r\n                opacity: 1\r\n            };\r\n        });\r\n        body.event(\"mouseleave\", async () => {\r\n            screenshot.style = {\r\n                opacity: 0\r\n            };\r\n        });\r\n        item.root.add(screenshot);\r\n        this.items.add(body.add(icon));\r\n        setTimeout(() => body.style = { opacity: 1 }, 50);\r\n        return this.map.set(item, { body, icon, config });\r\n    }\r\n}\r\nexports.default = Taskbar;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/Taskbar.ts?");

/***/ }),

/***/ "./docs/src/interface/Viewport.ts":
/*!****************************************!*\
  !*** ./docs/src/interface/Viewport.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Dom_1 = __webpack_require__(/*! ./Dom */ \"./docs/src/interface/Dom.ts\");\r\n/**\r\n * Taskbar dom interface\r\n */\r\nclass Viewport extends Dom_1.default {\r\n    /**\r\n     * Constructs the dom\r\n     */\r\n    constructor() {\r\n        super(\"div\", { id: \"Viewport\" });\r\n    }\r\n}\r\nexports.default = Viewport;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/Viewport.ts?");

/***/ }),

/***/ "./docs/src/interface/core/Application.ts":
/*!************************************************!*\
  !*** ./docs/src/interface/core/Application.ts ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst DraggableWindow_1 = __webpack_require__(/*! ./DraggableWindow */ \"./docs/src/interface/core/DraggableWindow.ts\");\r\nconst Item_1 = __webpack_require__(/*! ./Item */ \"./docs/src/interface/core/Item.ts\");\r\n/**\r\n * Taskbar dom interface\r\n */\r\nclass Application extends Item_1.default {\r\n    taskbar;\r\n    taskbarDefault;\r\n    module = null;\r\n    /**\r\n     * Constructs the dom.\r\n     *\r\n     * @argument {any} module\r\n     */\r\n    constructor(_module = {}) {\r\n        super();\r\n        console.log(_module);\r\n        this.module = _module;\r\n        this.createApplication();\r\n    }\r\n    /**\r\n     * Creates the element.\r\n     *\r\n     * Adds the icon &\r\n     * Adds the text name.\r\n     */\r\n    createApplication() {\r\n        this.create({\r\n            icon: this.module.base + \"/icon.png\",\r\n            iconType: 1,\r\n            name: this.module.name,\r\n            type: \"application\"\r\n        });\r\n    }\r\n    open(...data) {\r\n        console.time(\"[open] \" + this.module.name);\r\n        if (this.module.draggable_window)\r\n            this.openWindow(...data);\r\n        console.timeEnd(\"[open] \" + this.module.name);\r\n        const notInTaskbar = this.root.taskbar.includes(this);\r\n        if (!notInTaskbar) {\r\n            this.taskbar = true;\r\n            this.root.taskbar.insert(this, {\r\n                active: true\r\n            });\r\n        }\r\n        else {\r\n            this.taskbarDefault = true;\r\n            this.root.taskbar.updateConfig(this, {\r\n                active: true\r\n            });\r\n        }\r\n        this.emitter.emit(\"open\");\r\n    }\r\n    openWindow(...data) {\r\n        const Build = this.module;\r\n        const body = new Build();\r\n        const window = new DraggableWindow_1.default(this.module.draggable_window);\r\n        window.content.add(body);\r\n        window.init(this.root);\r\n        body.create(this.root, ...data);\r\n        this.windows.set(window.id, window);\r\n        window.emitter.addEventListener(\"close-window\", window => {\r\n            this.windows.delete(window.id);\r\n            if (this.taskbar)\r\n                this.root.taskbar.outsert(this);\r\n            if (this.taskbarDefault)\r\n                this.root.taskbar.updateConfig(this, { active: false });\r\n            this.taskbar = false;\r\n            this.taskbarDefault = false;\r\n        });\r\n    }\r\n}\r\nexports.default = Application;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/core/Application.ts?");

/***/ }),

/***/ "./docs/src/interface/core/ContextMenu.ts":
/*!************************************************!*\
  !*** ./docs/src/interface/core/ContextMenu.ts ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst EventEmitter_1 = __webpack_require__(/*! ../../EventEmitter */ \"./docs/src/EventEmitter.ts\");\r\nclass ContextMenu {\r\n    container;\r\n    ignore;\r\n    _onclick;\r\n    _oncontextmenu;\r\n    _oncontextmenu_keydown;\r\n    _onblur;\r\n    items;\r\n    emitter = new EventEmitter_1.default();\r\n    dom = null;\r\n    shown = false;\r\n    root = true;\r\n    parent = null;\r\n    submenus = [];\r\n    constructor(container, items) {\r\n        this.container = container;\r\n        this._onclick = e => {\r\n            if (this.dom && e.target != this.dom &&\r\n                e.target.parentElement != this.dom &&\r\n                !e.target.classList.contains('item') &&\r\n                !e.target.parentElement.classList.contains('item')) {\r\n                this.hideAll();\r\n            }\r\n        };\r\n        this._oncontextmenu = e => {\r\n            this.emitter.emit(\"open\", e);\r\n            e.preventDefault();\r\n            if (this.ignore)\r\n                return this.hideAll();\r\n            if (e.target != this.dom &&\r\n                e.target.parentElement != this.dom &&\r\n                !e.target.classList.contains('item') &&\r\n                !e.target.parentElement.classList.contains('item')) {\r\n                this.hideAll();\r\n                this.show(e.clientX, e.clientY);\r\n            }\r\n        };\r\n        this._oncontextmenu_keydown = e => {\r\n            if (e.keyCode != 93)\r\n                return;\r\n            e.preventDefault();\r\n            this.hideAll();\r\n            this.show(e.clientX, e.clientY);\r\n        };\r\n        this._onblur = e => {\r\n            this.hideAll();\r\n        };\r\n    }\r\n    createItems(items) {\r\n        this.items = items;\r\n    }\r\n    getMenuDom() {\r\n        const menu = document.createElement('div');\r\n        menu.classList.add('context');\r\n        for (const item of this.items) {\r\n            menu.appendChild(this.itemToDomEl(item));\r\n        }\r\n        return menu;\r\n    }\r\n    itemToDomEl(data) {\r\n        const item = document.createElement('div');\r\n        if (data === null) {\r\n            item.classList = 'separator';\r\n            return item;\r\n        }\r\n        if (data.hasOwnProperty('color') && /^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(data.color.toString())) {\r\n            item.style.cssText = `color: ${data.color}`;\r\n        }\r\n        item.classList.add('item');\r\n        const label = document.createElement('span');\r\n        label.classList = 'label';\r\n        label.innerText = data.hasOwnProperty('text') ? data['text'].toString() : '';\r\n        item.appendChild(label);\r\n        if (data.hasOwnProperty('disabled') && data['disabled']) {\r\n            item.classList.add('disabled');\r\n        }\r\n        else {\r\n            item.classList.add('enabled');\r\n        }\r\n        const hotkey = document.createElement('span');\r\n        hotkey.classList = 'hotkey';\r\n        hotkey.innerText = data.hasOwnProperty('hotkey') ? data['hotkey'].toString() : '';\r\n        item.appendChild(hotkey);\r\n        if (data.hasOwnProperty('subitems') && Array.isArray(data['subitems']) && data['subitems'].length > 0) {\r\n            const menu = new ContextMenu(this.container, data['subitems']);\r\n            menu.root = false;\r\n            menu.parent = this;\r\n            const openSubItems = e => {\r\n                if (data.hasOwnProperty('disabled') && data['disabled'] == true)\r\n                    return;\r\n                this.hideSubMenus();\r\n                const x = this.dom.offsetLeft + this.dom.clientWidth + item.offsetLeft;\r\n                const y = this.dom.offsetTop + item.offsetTop;\r\n                if (!menu.shown) {\r\n                    menu.show(x, y);\r\n                }\r\n                else {\r\n                    menu.hide();\r\n                }\r\n            };\r\n            this.submenus.push(menu);\r\n            item.classList.add('has-subitems');\r\n            item.addEventListener('click', openSubItems);\r\n            item.addEventListener('mousemove', openSubItems);\r\n        }\r\n        else if (data.hasOwnProperty('submenu') && data['submenu'] instanceof ContextMenu) {\r\n            const menu = data['submenu'];\r\n            menu.root = false;\r\n            menu.parent = this;\r\n            const openSubItems = e => {\r\n                if (data.hasOwnProperty('disabled') && data['disabled'] == true)\r\n                    return;\r\n                this.hideSubMenus();\r\n                const x = this.dom.offsetLeft + this.dom.clientWidth + item.offsetLeft;\r\n                const y = this.dom.offsetTop + item.offsetTop;\r\n                if (!menu.shown) {\r\n                    menu.show(x, y);\r\n                }\r\n                else {\r\n                    menu.hide();\r\n                }\r\n            };\r\n            this.submenus.push(menu);\r\n            item.classList.add('has-subitems');\r\n            item.addEventListener('click', openSubItems);\r\n            item.addEventListener('mousemove', openSubItems);\r\n        }\r\n        else {\r\n            item.addEventListener('click', e => {\r\n                this.hideSubMenus();\r\n                if (item.classList.contains('disabled'))\r\n                    return;\r\n                if (data.hasOwnProperty('onclick') && typeof data['onclick'] === 'function') {\r\n                    const event = {\r\n                        handled: false,\r\n                        item: item,\r\n                        label: label,\r\n                        hotkey: hotkey,\r\n                        items: this.items,\r\n                        data: data\r\n                    };\r\n                    data['onclick'](event);\r\n                    if (!event.handled) {\r\n                        this.hide();\r\n                    }\r\n                }\r\n                else {\r\n                    this.hide();\r\n                }\r\n            });\r\n            item.addEventListener('mousemove', e => {\r\n                this.hideSubMenus();\r\n            });\r\n        }\r\n        return item;\r\n    }\r\n    hideAll() {\r\n        if (this.root && !this.parent) {\r\n            if (this.shown) {\r\n                this.hideSubMenus();\r\n                this.shown = false;\r\n                document.body.removeChild(this.dom);\r\n                if (this.parent && this.parent.shown) {\r\n                    this.parent.hide();\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        this.parent.hide();\r\n    }\r\n    hide() {\r\n        if (this.dom && this.shown) {\r\n            this.shown = false;\r\n            this.hideSubMenus();\r\n            document.body.removeChild(this.dom);\r\n            if (this.parent && this.parent.shown) {\r\n                this.parent.hide();\r\n            }\r\n        }\r\n    }\r\n    hideSubMenus() {\r\n        for (const menu of this.submenus) {\r\n            if (menu.shown) {\r\n                menu.shown = false;\r\n                document.body.removeChild(menu.dom);\r\n            }\r\n            menu.hideSubMenus();\r\n        }\r\n    }\r\n    show(x, y) {\r\n        this.dom = this.getMenuDom();\r\n        this.dom.style.left = `${x}px`;\r\n        this.dom.style.top = `${y}px`;\r\n        this.shown = true;\r\n        document.body.appendChild(this.dom);\r\n    }\r\n    install() {\r\n        this.container.addEventListener('contextmenu', this._oncontextmenu);\r\n        this.container.addEventListener('keydown', this._oncontextmenu_keydown);\r\n        this.container.addEventListener('click', this._onclick);\r\n        window.addEventListener('blur', this._onblur);\r\n    }\r\n    uninstall() {\r\n        this.dom = null;\r\n        this.container.removeEventListener('contextmenu', this._oncontextmenu);\r\n        this.container.removeEventListener('keydown', this._oncontextmenu_keydown);\r\n        this.container.removeEventListener('click', this._onclick);\r\n        window.removeEventListener('blur', this._onblur);\r\n    }\r\n}\r\nexports.default = ContextMenu;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/core/ContextMenu.ts?");

/***/ }),

/***/ "./docs/src/interface/core/DraggableWindow.ts":
/*!****************************************************!*\
  !*** ./docs/src/interface/core/DraggableWindow.ts ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Dom_1 = __webpack_require__(/*! ../Dom */ \"./docs/src/interface/Dom.ts\");\r\nconst domtoimage = null; // remove this\r\n// import domtoimage from 'dom-to-image'; // u need to install this\r\nconst EventEmitter_1 = __webpack_require__(/*! ../../EventEmitter */ \"./docs/src/EventEmitter.ts\");\r\n/**\r\n * Taskbar dom interface\r\n */\r\nclass DraggableWindow extends Dom_1.default {\r\n    config;\r\n    header = new Dom_1.default(\"div\", { className: \"header\" });\r\n    content = new Dom_1.default(\"div\", { className: \"content\" });\r\n    title = new Dom_1.default(\"div\", { className: \"title\" });\r\n    headerActions = new Dom_1.default(\"div\", { className: \"headerActions\" });\r\n    id = Number(String(Math.random()).split(\".\").pop());\r\n    emitter = new EventEmitter_1.default();\r\n    /** @type {Array<Dom>} */\r\n    screenshots = [];\r\n    /**\r\n     * Constructs the dom\r\n     */\r\n    constructor(config) {\r\n        super(\"div\", { id: \"DraggableWindow\" });\r\n        this.title.text = config.title;\r\n        this.add(this.header, this.content);\r\n        this.header.add(this.title, this.headerActions);\r\n        this.config = config;\r\n        this.style = {\r\n            opacity: 0,\r\n            transition: \"height 0.1s linear, opacity 0.1s\",\r\n            height: \"0px\",\r\n            width: config.width + \"px\"\r\n        };\r\n        this.headerAction({\r\n            icon: \"close\",\r\n            then: () => this.close()\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param {object} config\r\n     * @param {string} config.icon\r\n     * @param {function} config.then\r\n     */\r\n    headerAction(config) {\r\n        const body = new Dom_1.default(\"div\", {\r\n            className: \"headerIcon\",\r\n            append: [new Dom_1.default(\"span\", { className: \"material-icons\", innerText: config.icon })]\r\n        });\r\n        body.event(\"click\", e => {\r\n            e.stopPropagation();\r\n            config.then();\r\n        });\r\n        this.headerActions.add(body);\r\n    }\r\n    /**\r\n     * Screenshots the header content div to png.\r\n     *\r\n     * @return {Dom}\r\n     */\r\n    async screenshot() {\r\n        const screenshot = new Dom_1.default(\"img\", {\r\n            className: \"screenshot\",\r\n            src: await domtoimage.toPng(this.content.element, {\r\n                quality: 0.5\r\n            })\r\n        });\r\n        this.screenshots.push(screenshot);\r\n        return screenshot;\r\n    }\r\n    dragElement() {\r\n        const scope = this;\r\n        let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n        this.header.element.onmousedown = dragMouseDown;\r\n        function dragMouseDown(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            // get the mouse cursor position at startup:\r\n            pos3 = e.clientX;\r\n            pos4 = e.clientY;\r\n            document.onmouseup = closeDragElement;\r\n            // call a function whenever the cursor moves:\r\n            document.onmousemove = elementDrag;\r\n        }\r\n        function elementDrag(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            // calculate the new cursor position:\r\n            pos1 = pos3 - e.clientX;\r\n            pos2 = pos4 - e.clientY;\r\n            pos3 = e.clientX;\r\n            pos4 = e.clientY;\r\n            // set the element's new position:\r\n            scope.element.style.top = (scope.element.offsetTop - pos2) + \"px\";\r\n            scope.element.style.left = (scope.element.offsetLeft - pos1) + \"px\";\r\n        }\r\n        function closeDragElement() {\r\n            /* stop moving when mouse button is released:*/\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n        }\r\n    }\r\n    close() {\r\n        this.delete();\r\n        this.screenshots.forEach(element => element.remove());\r\n        this.header.element.onmousedown = null;\r\n        this.emitter.emit(\"close-window\", this);\r\n    }\r\n    randomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n    init(root) {\r\n        // make position sensitive to size and document's width\r\n        const parentRect = root.viewport.element.getBoundingClientRect();\r\n        let left = Math.random() * (parentRect.width - this.config.width);\r\n        let top = Math.random() * (parentRect.height - this.config.height);\r\n        this.element.style.top = top + \"px\";\r\n        this.element.style.left = left + \"px\";\r\n        this.dragElement();\r\n        root.viewport.add(this);\r\n        this.content.style = {\r\n            opacity: 0,\r\n            transition: \"opacity 0.2s\"\r\n        };\r\n        setTimeout(() => {\r\n            this.style = {\r\n                opacity: 1,\r\n                height: this.config.height + \"px\",\r\n            };\r\n            setTimeout(() => {\r\n                this.content.style = {\r\n                    opacity: 1,\r\n                    height: `${this.element.offsetHeight - this.header.element.offsetHeight}px`\r\n                };\r\n            }, 200);\r\n        }, 10);\r\n    }\r\n}\r\nexports.default = DraggableWindow;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/core/DraggableWindow.ts?");

/***/ }),

/***/ "./docs/src/interface/core/File.ts":
/*!*****************************************!*\
  !*** ./docs/src/interface/core/File.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Item_1 = __webpack_require__(/*! ./Item */ \"./docs/src/interface/core/Item.ts\");\r\nclass File extends Item_1.default {\r\n    constructor(config) {\r\n        super();\r\n        this.create({\r\n            name: config.name,\r\n            icon: \"description\",\r\n            type: \"file\",\r\n            iconType: 2\r\n        });\r\n    }\r\n}\r\nexports.default = File;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/core/File.ts?");

/***/ }),

/***/ "./docs/src/interface/core/Folder.ts":
/*!*******************************************!*\
  !*** ./docs/src/interface/core/Folder.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Item_1 = __webpack_require__(/*! ./Item */ \"./docs/src/interface/core/Item.ts\");\r\nconst FolderEntry_1 = __webpack_require__(/*! ./FolderEntry */ \"./docs/src/interface/core/FolderEntry.ts\");\r\nclass Folder extends Item_1.default {\r\n    folder;\r\n    children = new FolderEntry_1.default();\r\n    constructor(config) {\r\n        super();\r\n        this.children.folder = this;\r\n        this.create({\r\n            name: config.name,\r\n            type: \"folder\",\r\n            icon: \"folder\",\r\n            iconType: 2\r\n        });\r\n        if (config.children)\r\n            config.children.forEach(item => this.children.add(item));\r\n    }\r\n    open() {\r\n        const app = this.root.getApplication(\"File Manager\");\r\n        app.open(this);\r\n    }\r\n}\r\nexports.default = Folder;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/core/Folder.ts?");

/***/ }),

/***/ "./docs/src/interface/core/FolderEntry.ts":
/*!************************************************!*\
  !*** ./docs/src/interface/core/FolderEntry.ts ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nclass FolderEntry extends Array {\r\n    folder;\r\n    parent;\r\n    /**\r\n     *\r\n     * @param {Folder|Item} item\r\n     */\r\n    delete(item) {\r\n        const index = this.indexOf(item);\r\n        if (index == -1)\r\n            return 1;\r\n        delete index[index];\r\n        return 2;\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} property\r\n     * @param {any} value\r\n     */\r\n    deleteByProperty(property, value) {\r\n        const index = this.findIndex(item => item[property] === value);\r\n        const item = this[index];\r\n        return this.delete(item);\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} name\r\n     */\r\n    deleteByName(name) {\r\n        return this.deleteByProperty(\"name\", name);\r\n    }\r\n    /**\r\n     *\r\n     * @param {Item} item\r\n     */\r\n    add(item) {\r\n        if (this.includes(item))\r\n            return;\r\n        item.parentEntry = this;\r\n        item.parent = this.folder;\r\n        return this.push(item);\r\n    }\r\n}\r\nexports.default = FolderEntry;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/core/FolderEntry.ts?");

/***/ }),

/***/ "./docs/src/interface/core/InternalError.ts":
/*!**************************************************!*\
  !*** ./docs/src/interface/core/InternalError.ts ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nclass ExternalError {\r\n    constructor(message) {\r\n        const error = new Error(message);\r\n        console.error(error);\r\n        return error;\r\n    }\r\n}\r\nexports.default = ExternalError;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/core/InternalError.ts?");

/***/ }),

/***/ "./docs/src/interface/core/Item.ts":
/*!*****************************************!*\
  !*** ./docs/src/interface/core/Item.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Dom_1 = __webpack_require__(/*! ../Dom */ \"./docs/src/interface/Dom.ts\");\r\nconst EventEmitter_1 = __webpack_require__(/*! ../../EventEmitter */ \"./docs/src/EventEmitter.ts\");\r\nconst InternalError_1 = __webpack_require__(/*! ./InternalError */ \"./docs/src/interface/core/InternalError.ts\");\r\n;\r\n/**\r\n * Item constructor\r\n * Filesystem foler or file wrapper\r\n */\r\nclass Item extends Dom_1.default {\r\n    parentEntry;\r\n    parent;\r\n    root;\r\n    static nameLength = 255;\r\n    static nameReserved = [\r\n        \"<\",\r\n        \">\",\r\n        \":\",\r\n        \"\\\"\",\r\n        \"/\",\r\n        \"\\\\\",\r\n        \"|\",\r\n        \"?\",\r\n        \"*\"\r\n    ];\r\n    static nameAvoid = [\r\n        \"PRN\", \"AUX\", \"NUL\", \"COM1\",\r\n        \"COM2\", \"COM3\", \"COM4\", \"COM5\",\r\n        \"COM6\", \"COM7\", \"COM8\", \"COM9\",\r\n        \"LPT1\", \"LPT2\", \"LPT3\", \"LPT4\",\r\n        \"LPT5\", \"LPT6\", \"LPT7\", \"LPT8\",\r\n        \"LPT9\"\r\n    ];\r\n    emitter = new EventEmitter_1.default();\r\n    /** @type {Map<number, DraggableWindow>} */\r\n    windows = new Map();\r\n    /** @type {Map<number, Dom>} */\r\n    clones = new Map();\r\n    icon = new Dom_1.default(\"div\", { className: \"icon\" });\r\n    name = new Dom_1.default(\"div\", { className: \"name\" });\r\n    meta = Object.create(null);\r\n    context = [\r\n        { text: 'Open', value: 'chrome-dark', onclick: () => { } },\r\n        { text: 'Delete', value: 'chrome-bright', onclick: () => { } }\r\n    ];\r\n    constructor() {\r\n        super(\"div\", { id: \"Item\" });\r\n        this.element.item = this;\r\n        this.createEvents({\r\n            name: this.name,\r\n            icon: this.icon,\r\n            open: () => this.open(),\r\n            update() { }\r\n        });\r\n    }\r\n    createEvents(config) {\r\n        config.icon.event(\"dblclick\", () => config.open());\r\n        config.name.event(\"dblclick\", () => {\r\n            config.name.element.setAttribute(\"contenteditable\", \"true\");\r\n            config.name.element.focus();\r\n            document.execCommand('selectAll', false, null);\r\n            config.update();\r\n        });\r\n        config.name.event(\"blur\", () => {\r\n            config.name.element.setAttribute(\"contenteditable\", \"false\");\r\n            try {\r\n                const name = this.formatFileName(config.name.text);\r\n                this.rename(name);\r\n                config.name.text = name;\r\n                this.emitter.emit(\"rename\", name);\r\n            }\r\n            catch (e) {\r\n                config.name.text = this.meta.name;\r\n            }\r\n            config.update();\r\n        });\r\n    }\r\n    formatFileName(name) {\r\n        if (name.endsWith(\" \") || name.endsWith(\".\"))\r\n            throw new InternalError_1.default('Do not end a file or directory name with a space or a period. Although the underlying file system may support such names, the Windows shell and user interface does not. However, it is acceptable to specify a period as the first character of a name. For example, \".temp\".');\r\n        for (let reserved of Item.nameReserved) {\r\n            if (name.includes(reserved))\r\n                throw new InternalError_1.default(`printable ASCII character \"${reserved}\" out of characters '${Item.nameReserved.join(\", \")}' are forbidden.`);\r\n        }\r\n        if (Item.nameAvoid.includes(name))\r\n            throw new InternalError_1.default(`${Item.nameAvoid.join(\", \")}. Also avoid these names followed immediately by an extension; for example, ${Item.nameAvoid.random()}.txt is not recommended.`);\r\n        if (name.length > Item.nameLength)\r\n            throw new InternalError_1.default(`The API imposes a maximum filename length such that a filename, including the file path to get to the file, can't exceed ${Item.nameLength} characters.`);\r\n        return name.replace(/\\n/gm, \"\").trim();\r\n    }\r\n    rename(value) {\r\n        this.meta.name = value;\r\n    }\r\n    open() { }\r\n    createClone() {\r\n        const clone = this.clone(true);\r\n        clone.cloneId = Number(String(Math.random()).split(\".\").pop());\r\n        clone.element.setAttribute(\"clone\", true);\r\n        this.clones.set(clone.cloneId, clone);\r\n        clone.element.item = this;\r\n        return clone;\r\n    }\r\n    /**\r\n     *\r\n     * @param {Meta} config\r\n     * @param {string} config.name\r\n     * @param {string} config.base\r\n     * @param {string} config.icon\r\n     * @param {number} config.iconType\r\n     */\r\n    create(config) {\r\n        Object.assign(this.meta, config);\r\n        this.element.setAttribute(\"item-type\", config.type || \"null\");\r\n        this.clear();\r\n        this.name.text = config.name;\r\n        this.icon.add(this.createIcon(config.icon, config.iconType || 1));\r\n        this.add(this.icon, this.name);\r\n    }\r\n    createIcon(icon, type) {\r\n        switch (type) {\r\n            case 1:\r\n                return new Dom_1.default(\"img\", { src: icon });\r\n            case 2:\r\n                return new Dom_1.default(\"span\", { className: \"material-icons\", innerText: icon });\r\n        }\r\n    }\r\n}\r\nexports.default = Item;\r\n\n\n//# sourceURL=webpack://wombat/./docs/src/interface/core/Item.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./docs/src/index.ts");
/******/ 	
/******/ })()
;